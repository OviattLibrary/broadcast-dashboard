<?php
// $Id$
/**
 * @file
 * Broadcast Dashboard module file
 * 
 * This module "broadcasts" pre-written or custom inserted text to specified areas of a website when switched on.
 */

/**
 * Implements hook_help().
 */

function broadcast_dashboard_help($path, $arg) {
  if ($path === 'admin/help#broadcast_dashboard') {
    return t ('The Broadcast Dashboard module allows for text notifications to be pushed to specified areas of the website when switched on.');
  }
}

/**
 * Implements hook_menu().
 */

function broadcast_dashboard_menu() {
  $items = array();

  $items['admin/config/system/broadcast_dashboard'] = array(
    'title' => 'Broadcast Dashboard',
    'description' => 'Configuration for the Broadcast Dashboard module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('broadcast_dashboard_form'),
    'access_callback' => TRUE,
    'access arguments' => array('adminster content'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;

}

/**
 * Implements hook_form().
 */

function broadcast_dashboard_form() {
  global $theme_key;
  $theme_default = variable_get('theme_default', NULL);
  $regions = system_region_list($theme_default, $show = REGIONS_ALL, $labels = FALSE);

  $form['broadcast_dashboard_region'] = array(
    '#type' => 'select',
    '#title' => t('Select box'),
    '#default_value' => $node->broadcast_dashboard_region,
    '#options' => $regions,
    '#description' => t('Select a location to display the message.'),
  );

  $form['broadcast_dashboard_custom_message'] = array (
    '#type' => 'textfield',
    '#default_value' => variable_get('broadcast_dashboard_custom_message',
                                     'Broadcast Dashboard Custom Message'),
    '#title' => t('Broadcast Dashboard Custom Message'),
    '#description' => t('Custom message to appear in place of pre-written notification text.'),
    '#size' => 60,
    '#maxlength' => 255,
    '#required' => TRUE,
  );

  // Submit button
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save settings'),
  );

  return $form;
}

/**
 * Implements hook_form_submit().
 */

function broadcast_dashboard_form_submit($form, &$form_state) {
  $form_has_errors = FALSE;

  if (!empty($form_state['values']['broadcast_dashboard_custom_message'])) {
    $current_title = $form_state['values']['broadcast_dashboard_custom_message'];
    $previous_title = variable_get('broadcast_dashboard_custom_message');
      // prevents check_plain from double encoding a pre-existing string
      if ($current_title != $previous_title) {
        $set_title = check_plain($form_state['values']['broadcast_dashboard_custom_message']);
        variable_set('broadcast_dashboard_custom_message',
                   $set_title);
      }
  }

  if ($form_has_errors == FALSE) {
    drupal_set_message(t('The settings have successfully been saved.'));
  }
}

/**
 * Implements hook_test_display().
 */

function broadcast_dashboard_test_display() {
	global $theme_key;
	print 'Our current theme is: ' . $theme_key . '<br>';

	$regions = system_region_list($theme_key, $show = REGIONS_ALL, $labels = FALSE);
	print '<pre>';
	print_r($regions);
	print '</pre>';
}