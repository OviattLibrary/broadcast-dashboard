<?php
// $Id$
/**
 * @file
 * Broadcast Dashboard module file
 * 
 * This module 'broadcasts' pre-written or custom inserted text to specified areas of a website when switched on.
 */

/**
 * Implements hook_help().
 */

function broadcast_dashboard_help($path, $arg) {
  if ($path === 'admin/help#broadcast_dashboard') {
    return t ('The Broadcast Dashboard module allows for text notifications to be pushed to specified areas of the website when switched on.');
  }
}

/**
 * Implements hook_menu().
 */

function broadcast_dashboard_menu() {
  $items = array();

  $items['admin/config/system/broadcast_dashboard'] = array(
    'title' => 'Broadcast Dashboard',
    'description' => 'Configuration for the Broadcast Dashboard module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('broadcast_dashboard_form'),
    'access_callback' => TRUE,
    'access arguments' => array('adminster content'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;

}

/**
 * Implements hook_form().
 */


function broadcast_dashboard_form() {
  $theme_default = variable_get('theme_default', NULL);
  $regions = system_region_list($theme_default, $show = REGIONS_ALL, $labels = TRUE);

  $form['broadcast_dashboard_active'] = array(
    '#type' => checkbox,
    '#title' => t('Activate Broadcast'),
    '#return_value' => 1,
    '#default_value' => variable_get('broadcast_dashboard_active', 0),
    '#description' => t('When activated, the selected message will be broadcast on the website.'),
  );

  $form['broadcast_dashboard_message'] = array(
    '#type' => 'select',
    '#title' => t('Type of Message'),
    '#default_value' => variable_get('broadcast_dashboard_message', 0),
    '#options' => array(
      1 => t('Drill'),
      2 => t('Earthquake'),
      3 => t('Fire'),
      4 => t('Shooter'),
      5 => t('Custom'),
    ),
    '#description' => t('Select the type of message to broadcast.'),
    '#required' => FALSE,
    '#states' => array(
	  "visible" => array(
	    "input[name='broadcast_dashboard_active']" => array("checked" => TRUE)),
      "required" => array(
	    "input[name='broadcast_dashboard_active']" => array("checked" => TRUE)),
	  ),
  );

  $form['broadcast_dashboard_region'] = array(
    '#type' => 'select',
    '#title' => t('Region Selection'),
    '#default_value' => variable_get('broadcast_dashboard_region', 0),
    '#options' => $regions,
    '#description' => t('Select a location to display the message.'),
    '#required' => FALSE,
    '#states' => array(
	  "visible" => array(
	    "input[name='broadcast_dashboard_active']" => array("checked" => TRUE)),
      "required" => array(
	    "input[name='broadcast_dashboard_active']" => array("checked" => TRUE)),
	  ),
  );

  $form['broadcast_dashboard_custom_message'] = array (
    '#type' => 'textfield',
    '#default_value' => variable_get('broadcast_dashboard_custom_message', 'Broadcast Dashboard Custom Message'),
    '#title' => t('Broadcast Dashboard Custom Message'),
    '#description' => t('Custom message to appear in place of pre-written notification text.'),
    '#size' => 60,
    '#maxlength' => 255,
    '#states' => array(
      "visible" => array(
      	"input[name='broadcast_dashboard_active']" => array("checked" => TRUE),
        ":input[name='broadcast_dashboard_message']" => array("value" => 5)),
      "required" => array(
      	"input[name='broadcast_dashboard_active']" => array("checked" => TRUE),
        ":input[name='broadcast_dashboard_message']" => array("value" => 5)),
	  ),
  );

  $form['broadcast_dashboard_custom_message_color'] = array(
    '#type' => 'select',
    '#title' => t('Color of Message'),
    '#default_value' => variable_get('broadcast_dashboard_custom_message_color', 0),
    '#options' => array(
      1 => t('Success - Green'),
      2 => t('Info - Blue'),
      3 => t('Warning - Yellow'),
      4 => t('Danger - Red'),
    ),
    '#description' => t('Set the custom message color based on Bootstrap alerts.'),
    '#required' => FALSE,
    '#states' => array(
      "visible" => array(
      	"input[name='broadcast_dashboard_active']" => array("checked" => TRUE),
        ":input[name='broadcast_dashboard_message']" => array("value" => 5)),
      "required" => array(
      	"input[name='broadcast_dashboard_active']" => array("checked" => TRUE),
        ":input[name='broadcast_dashboard_message']" => array("value" => 5)),
	  ),
  );

  // Submit button
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save settings'),
  );

  return $form;
}

/**
 * Implements hook_form_submit().
 */

function broadcast_dashboard_form_submit($form, &$form_state) {
  $form_has_errors = FALSE;

  // Active Check
  $current_active = $form_state['values']['broadcast_dashboard_active'];
  $previous_active = variable_get('broadcast_dashboard_active');
  $set_active = $form_state['values']['broadcast_dashboard_active'];
  variable_set('broadcast_dashboard_active', $set_active);

  // Type of Message Check
  $current_msg_type = $form_state['values']['broadcast_dashboard_message'];
  $previous_msg_type = variable_get('broadcast_dashboard_message');
  $set_msg_type = $form_state['values']['broadcast_dashboard_message'];
  variable_set('broadcast_dashboard_message', $set_msg_type);

  // Region Check
  $current_region = $form_state['values']['broadcast_dashboard_region'];
  $previous_region = variable_get('broadcast_dashboard_region');
  $set_region = $form_state['values']['broadcast_dashboard_region'];
  variable_set('broadcast_dashboard_region', $set_region);
  
  // Custom Message Check
  if (!empty($form_state['values']['broadcast_dashboard_custom_message'])) {
    $current_title = $form_state['values']['broadcast_dashboard_custom_message'];
    $previous_title = variable_get('broadcast_dashboard_custom_message');
      // prevents check_plain from double encoding a pre-existing string
      if ($current_title != $previous_title) {
        $set_title = check_plain($form_state['values']['broadcast_dashboard_custom_message']);
        variable_set('broadcast_dashboard_custom_message',
                   $set_title);
      }
  }

  // Custom Message Color Check
  $current_color = $form_state['values']['broadcast_dashboard_custom_message_color'];
  $previous_color = variable_get('broadcast_dashboard_custom_message_color');
  $set_color = $form_state['values']['broadcast_dashboard_custom_message_color'];
  variable_set('broadcast_dashboard_custom_message_color', $set_color);

  if ($form_has_errors == FALSE) {
    drupal_set_message(t('The settings have successfully been saved.'));
  }
}

/**
 * Custom function for testing output.
 *
 * @param bool $active
 *   A boolean that indicates whether Broadcast message should be displayed or not.
 *
 * @param array $msg_type
 *   Array of type of message - includes custom message option.
 *
 * @param string $region
 *   String containing region name to be passed to alter function.
 *
 * @param string $cust_msg
 *   String containing custom Broadcast message.
 *
 * @param string $cust_msg_clr
 *   String containing semantic color for message box.
 *
 */

function broadcast_dashboard_test_display() {                  

  global $theme_key; 
  /*print 'Our current theme is: ' . $theme_key . '<br>';

  $regions = system_region_list($theme_key, $show = REGIONS_ALL, $labels = FALSE);
  print '<pre>';
  print_r($regions);
  print '</pre>';*/
  
  if (variable_get('broadcast_dashboard_active')) {
    $active = variable_get('broadcast_dashboard_active'); 
    $msg_type = variable_get('broadcast_dashboard_message');  
    $region = variable_get('broadcast_dashboard_region');
    $cust_msg = variable_get('broadcast_dashboard_custom_message');
    $cust_msg_clr = variable_get('broadcast_dashboard_custom_message_color');
  }
 
  print 'Active state is: ' . $active;

  if (variable_get('broadcast_dashboard_active')) {
    print 'Message type is: '. $msg_type;
    print 'Target region is: '. $region;
    print 'Custom message is: '. $cust_msg;
    print 'Custom message color is: '. $cust_msg_clr;
  }

}

/**
 * Implements hook_page_alter().
 */

function broadcast_dashboard_page_alter(&$page) {

  $page['branding'] = array(
    '#markup' => t('Altering the branding region'),
  );

}
